classdef app1 < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        UIFigure                 matlab.ui.Figure
        GridLayout               matlab.ui.container.GridLayout
        LeftPanel                matlab.ui.container.Panel
        RangominEditFieldLabel   matlab.ui.control.Label
        RangominEditField        matlab.ui.control.NumericEditField
        RangomaxEditFieldLabel   matlab.ui.control.Label
        RangomaxEditField        matlab.ui.control.NumericEditField
        DepuntosEditFieldLabel   matlab.ui.control.Label
        DepuntosEditField        matlab.ui.control.NumericEditField
        LimpiarButton            matlab.ui.control.Button
        BackButton               matlab.ui.control.Button
        TiempoporVectoresLabel   matlab.ui.control.Label
        TiempoporEscalaresLabel  matlab.ui.control.Label
        CalcularButton           matlab.ui.control.Button
        Label                    matlab.ui.control.Label
        Label_2                  matlab.ui.control.Label
        RightPanel               matlab.ui.container.Panel
        UIAxes                   matlab.ui.control.UIAxes
    end

    % Properties that correspond to apps with auto-reflow
    properties (Access = private)
        onePanelWidth = 576;
    end

    % Callbacks that handle component events
    methods (Access = private)

        % Button pushed function: LimpiarButton
        function LimpiarButtonPushed(app, event)
            clf
        end

        % Button pushed function: CalcularButton
        function CalcularButtonPushed(app, event)
            min = get(app.RangominEditField, 'Value');
            max = get(app.RangomaxEditField, 'Value');
            p = get(app.DepuntosEditField, 'Value');
            figure(app.UIFigure)
            [time1,time2, a] = ejercicio3(min,max,p);
           
            app.Label.Text = num2str(time1);
            drawnow
            app.Label_2.Text = num2str(time2);
            drawnow
            
          hold on;
    syms y(x);
    y(x) = piecewise(-7<x<=5, -x, 5<x<7, 2.*x-10, x>7, x.^2);
        d = linspace(min, max, p);
     plot(d,y(d))
     
     syms h(x);
    h(x) = piecewise(x<3, 2, 5<x<20, log(x), x>23, exp(x));
     e = linspace(min, max, p);
     plot(e,h(e))
     
     syms g(x);
    g(x) = piecewise(x<-3, 2, -3<=x<=11, x./2, x>11, 3);
     f = linspace(min, max, p);
     plot(f,g(f))
            
        end

        % Changes arrangement of the app based on UIFigure width
        function updateAppLayout(app, event)
            currentFigureWidth = app.UIFigure.Position(3);
            if(currentFigureWidth <= app.onePanelWidth)
                % Change to a 2x1 grid
                app.GridLayout.RowHeight = {480, 480};
                app.GridLayout.ColumnWidth = {'1x'};
                app.RightPanel.Layout.Row = 2;
                app.RightPanel.Layout.Column = 1;
            else
                % Change to a 1x2 grid
                app.GridLayout.RowHeight = {'1x'};
                app.GridLayout.ColumnWidth = {220, '1x'};
                app.RightPanel.Layout.Row = 1;
                app.RightPanel.Layout.Column = 2;
            end
        end
    end

    % Component initialization
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create UIFigure and hide until all components are created
            app.UIFigure = uifigure('Visible', 'off');
            app.UIFigure.AutoResizeChildren = 'off';
            app.UIFigure.Position = [100 100 640 480];
            app.UIFigure.Name = 'UI Figure';
            app.UIFigure.SizeChangedFcn = createCallbackFcn(app, @updateAppLayout, true);

            % Create GridLayout
            app.GridLayout = uigridlayout(app.UIFigure);
            app.GridLayout.ColumnWidth = {220, '1x'};
            app.GridLayout.RowHeight = {'1x'};
            app.GridLayout.ColumnSpacing = 0;
            app.GridLayout.RowSpacing = 0;
            app.GridLayout.Padding = [0 0 0 0];
            app.GridLayout.Scrollable = 'on';

            % Create LeftPanel
            app.LeftPanel = uipanel(app.GridLayout);
            app.LeftPanel.Layout.Row = 1;
            app.LeftPanel.Layout.Column = 1;

            % Create RangominEditFieldLabel
            app.RangominEditFieldLabel = uilabel(app.LeftPanel);
            app.RangominEditFieldLabel.HorizontalAlignment = 'right';
            app.RangominEditFieldLabel.Position = [16 335 67 22];
            app.RangominEditFieldLabel.Text = 'Rango  min';

            % Create RangominEditField
            app.RangominEditField = uieditfield(app.LeftPanel, 'numeric');
            app.RangominEditField.Position = [98 335 97 22];

            % Create RangomaxEditFieldLabel
            app.RangomaxEditFieldLabel = uilabel(app.LeftPanel);
            app.RangomaxEditFieldLabel.HorizontalAlignment = 'right';
            app.RangomaxEditFieldLabel.Position = [16 305 67 22];
            app.RangomaxEditFieldLabel.Text = 'Rango max';

            % Create RangomaxEditField
            app.RangomaxEditField = uieditfield(app.LeftPanel, 'numeric');
            app.RangomaxEditField.Position = [98 305 97 22];

            % Create DepuntosEditFieldLabel
            app.DepuntosEditFieldLabel = uilabel(app.LeftPanel);
            app.DepuntosEditFieldLabel.HorizontalAlignment = 'right';
            app.DepuntosEditFieldLabel.Position = [9 266 70 22];
            app.DepuntosEditFieldLabel.Text = '# De puntos';

            % Create DepuntosEditField
            app.DepuntosEditField = uieditfield(app.LeftPanel, 'numeric');
            app.DepuntosEditField.Position = [94 266 100 22];

            % Create LimpiarButton
            app.LimpiarButton = uibutton(app.LeftPanel, 'push');
            app.LimpiarButton.ButtonPushedFcn = createCallbackFcn(app, @LimpiarButtonPushed, true);
            app.LimpiarButton.Position = [16 217 83 22];
            app.LimpiarButton.Text = 'Limpiar';

            % Create BackButton
            app.BackButton = uibutton(app.LeftPanel, 'push');
            app.BackButton.Position = [9 28 100 22];
            app.BackButton.Text = 'Back';

            % Create TiempoporVectoresLabel
            app.TiempoporVectoresLabel = uilabel(app.LeftPanel);
            app.TiempoporVectoresLabel.Position = [16 136 123 54];
            app.TiempoporVectoresLabel.Text = 'Tiempo por Vectores: ';

            % Create TiempoporEscalaresLabel
            app.TiempoporEscalaresLabel = uilabel(app.LeftPanel);
            app.TiempoporEscalaresLabel.Position = [13 76 126 61];
            app.TiempoporEscalaresLabel.Text = 'Tiempo por Escalares: ';

            % Create CalcularButton
            app.CalcularButton = uibutton(app.LeftPanel, 'push');
            app.CalcularButton.ButtonPushedFcn = createCallbackFcn(app, @CalcularButtonPushed, true);
            app.CalcularButton.Position = [115 217 83 22];
            app.CalcularButton.Text = 'Calcular';

            % Create Label
            app.Label = uilabel(app.LeftPanel);
            app.Label.Position = [144 152 64 22];
            app.Label.Text = '';

            % Create Label_2
            app.Label_2 = uilabel(app.LeftPanel);
            app.Label_2.Position = [144 95 64 22];
            app.Label_2.Text = '';

            % Create RightPanel
            app.RightPanel = uipanel(app.GridLayout);
            app.RightPanel.Layout.Row = 1;
            app.RightPanel.Layout.Column = 2;

            % Create UIAxes
            app.UIAxes = uiaxes(app.RightPanel);
            title(app.UIAxes, '')
            xlabel(app.UIAxes, 'X')
            ylabel(app.UIAxes, 'Y')
            app.UIAxes.Position = [6 49 408 425];

            % Show the figure after all components are created
            app.UIFigure.Visible = 'on';
        end
    end

    % App creation and deletion
    methods (Access = public)

        % Construct app
        function app = app1

            % Create UIFigure and components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.UIFigure)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.UIFigure)
        end
    end
end